{"ast":null,"code":"var _jsxFileName = \"/home/leonardo-fragoso/Documentos/convertsite/frontend/src/components/ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring'; // Importando react-spring para animação\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  progress\n}) => {\n  _s();\n  // Animação de preenchimento usando react-spring\n  const props = useSpring({\n    width: `${progress}%`,\n    from: {\n      width: '0%'\n    },\n    config: {\n      duration: 500\n    } // Animação com duração de 500ms\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar\",\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"progress-fill\",\n      style: props,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"2eLh5p/G96FiNolTD5G7yAACzvw=\", false, function () {\n  return [useSpring];\n});\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useSpring","animated","jsxDEV","_jsxDEV","ProgressBar","progress","_s","props","width","from","config","duration","className","children","div","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/leonardo-fragoso/Documentos/convertsite/frontend/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\nimport { useSpring, animated } from 'react-spring'; // Importando react-spring para animação\nimport './ProgressBar.css';\n\nconst ProgressBar = ({ progress }) => {\n  // Animação de preenchimento usando react-spring\n  const props = useSpring({\n    width: `${progress}%`,\n    from: { width: '0%' },\n    config: { duration: 500 }, // Animação com duração de 500ms\n  });\n\n  return (\n    <div className=\"progress-bar\">\n      <animated.div className=\"progress-fill\" style={props}>\n        <span className=\"progress-text\">{progress}%</span>\n      </animated.div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc,CAAC,CAAC;AACpD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC;EACA,MAAMC,KAAK,GAAGP,SAAS,CAAC;IACtBQ,KAAK,EAAE,GAAGH,QAAQ,GAAG;IACrBI,IAAI,EAAE;MAAED,KAAK,EAAE;IAAK,CAAC;IACrBE,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC,CAAE;EAC7B,CAAC,CAAC;EAEF,oBACER,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BV,OAAA,CAACF,QAAQ,CAACa,GAAG;MAACF,SAAS,EAAC,eAAe;MAACG,KAAK,EAAER,KAAM;MAAAM,QAAA,eACnDV,OAAA;QAAMS,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAER,QAAQ,EAAC,GAAC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACb,EAAA,CAfIF,WAAW;EAAA,QAEDJ,SAAS;AAAA;AAAAoB,EAAA,GAFnBhB,WAAW;AAiBjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
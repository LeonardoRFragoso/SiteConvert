{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Documentos/SiteConvert/frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Pega o valor salvo no localStorage, se existir\n    const savedTheme = localStorage.getItem('isDarkMode');\n    return savedTheme ? JSON.parse(savedTheme) : false;\n  });\n\n  // Atualiza o localStorage sempre que o tema mudar\n  useEffect(() => {\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isDarkMode ? 'dark' : '',\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"Ev5GFYS0MNb7e5Ou9gN9U6tzNtE=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","JSON","parse","setItem","stringify","toggleTheme","prevMode","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/leonardo/Documentos/SiteConvert/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Pega o valor salvo no localStorage, se existir\n    const savedTheme = localStorage.getItem('isDarkMode');\n    return savedTheme ? JSON.parse(savedTheme) : false;\n  });\n\n  // Atualiza o localStorage sempre que o tema mudar\n  useEffect(() => {\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode((prevMode) => !prevMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {/* Usando a classe \"dark\" do Tailwind para alternar temas */}\n      <div className={isDarkMode ? 'dark' : ''}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACjD;IACA,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,KAAK;EACpD,CAAC,CAAC;;EAEF;EACAX,SAAS,CAAC,MAAM;IACdY,YAAY,CAACI,OAAO,CAAC,YAAY,EAAEF,IAAI,CAACG,SAAS,CAACR,UAAU,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,aAAa,CAAES,QAAQ,IAAK,CAACA,QAAQ,CAAC;EACxC,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,UAAU;MAAES;IAAY,CAAE;IAAAX,QAAA,eAExDL,OAAA;MAAKoB,SAAS,EAAEb,UAAU,GAAG,MAAM,GAAG,EAAG;MAAAF,QAAA,EACtCA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE5B,CAAC;AAAClB,GAAA,CAxBWF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>useContext(ThemeContext);export const ThemeProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(false);const toggleTheme=()=>{setIsDarkMode(prevMode=>!prevMode);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDarkMode,toggleTheme},children:/*#__PURE__*/_jsx(\"div\",{className:isDarkMode?'dark-mode':'light-mode',children:children})});};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","ThemeContext","useTheme","ThemeProvider","_ref","children","isDarkMode","setIsDarkMode","toggleTheme","prevMode","Provider","value","className"],"sources":["/home/leonardo-fragoso/Documentos/convertsite/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const toggleTheme = () => {\n    setIsDarkMode((prevMode) => !prevMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      <div className={isDarkMode ? 'dark-mode' : 'light-mode'}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAM,QAAQ,CAAGA,CAAA,GAAML,UAAU,CAACI,YAAY,CAAC,CAEtD,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAU,WAAW,CAAGA,CAAA,GAAM,CACxBD,aAAa,CAAEE,QAAQ,EAAK,CAACA,QAAQ,CAAC,CACxC,CAAC,CAED,mBACET,IAAA,CAACC,YAAY,CAACS,QAAQ,EAACC,KAAK,CAAE,CAAEL,UAAU,CAAEE,WAAY,CAAE,CAAAH,QAAA,cACxDL,IAAA,QAAKY,SAAS,CAAEN,UAAU,CAAG,WAAW,CAAG,YAAa,CAAAD,QAAA,CACrDA,QAAQ,CACN,CAAC,CACe,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
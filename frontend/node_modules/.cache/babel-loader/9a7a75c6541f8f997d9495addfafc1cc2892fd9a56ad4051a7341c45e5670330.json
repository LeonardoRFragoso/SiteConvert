{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Documentos/SiteConvert/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"./components/ui/button\";\nimport Input from \"./components/ui/input\";\nimport Progress from \"./components/ui/progress\";\nimport { ThemeProvider } from \"./context/ThemeContext\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState(\"\");\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [downloadFormat, setDownloadFormat] = useState(\"\");\n\n  // URL da API\n  const apiURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n\n  // Upload do arquivo\n  const handleFileUpload = event => {\n    var _supportedFormats$typ;\n    const uploadedFile = event.target.files[0];\n    if (!uploadedFile) {\n      setError(\"Nenhum arquivo selecionado.\");\n      setFile(null);\n      return;\n    }\n    const type = uploadedFile.type.split(\"/\")[0];\n    const extension = uploadedFile.name.split(\".\").pop().toLowerCase();\n    const supportedFormats = {\n      image: [\"jpeg\", \"jpg\", \"png\", \"svg\", \"bmp\", \"tiff\", \"ico\", \"webp\", \"gif\"],\n      audio: [\"mp3\", \"wav\", \"ogg\", \"flac\", \"m4a\"],\n      application: [\"pdf\", \"docx\"]\n    };\n    if (!((_supportedFormats$typ = supportedFormats[type]) !== null && _supportedFormats$typ !== void 0 && _supportedFormats$typ.includes(extension))) {\n      setError(`Formato de arquivo .${extension} não é suportado.`);\n      setFile(null);\n      return;\n    }\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError(\"\");\n  };\n\n  // Conversão do arquivo\n  const handleConversion = format => {\n    if (!file) {\n      setError(\"Por favor, envie um arquivo primeiro.\");\n      return;\n    }\n    if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      const supportedFormats = [\"jpeg\", \"jpg\", \"png\", \"bmp\", \"tiff\", \"gif\", \"webp\"];\n      if (!supportedFormats.includes(format)) {\n        setError(`Formato de saída '${format}' não é suportado para conversão de PDF. Escolha entre: ${supportedFormats.join(\", \")}.`);\n        return;\n      }\n    }\n    setIsProcessing(true);\n    setProgress(0);\n    setDownloadFormat(format);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"format\", format);\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === \"audio\") {\n      apiEndpoint = `${apiURL}/convert/audio`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      apiEndpoint = `${apiURL}/convert/pdf_to_images`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".docx\")) {\n      apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n    }\n    fetch(apiEndpoint, {\n      method: \"POST\",\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`Erro do servidor: ${response.status} - ${response.statusText}`);\n      }\n      return response.blob();\n    }).then(blob => {\n      const downloadUrl = window.URL.createObjectURL(blob);\n      setConvertedFile(downloadUrl);\n    }).catch(err => {\n      setError(err.message || \"Erro inesperado ao converter o arquivo\");\n      console.error(\"Erro no processamento do arquivo:\", err);\n    }).finally(() => {\n      setProgress(100);\n      setIsProcessing(false);\n    });\n  };\n\n  // Resetar estado\n  const reset = () => {\n    setFile(null);\n    setFileType(\"\");\n    setConvertedFile(null);\n    setProgress(0);\n    setError(\"\");\n    setIsProcessing(false);\n    setDownloadFormat(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-4\",\n          children: \"Conversor de Arquivos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Erro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), \" \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          onChange: handleFileUpload,\n          className: \"mt-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipos de arquivos suportados:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Imagens: JPEG, JPG, PNG, SVG, BMP, TIFF, ICO, WEBP, GIF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\xC1udio: MP3, WAV, OGG, FLAC, M4A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Documentos: PDF, DOCX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), file && fileType === \"application\" && file.name.endsWith(\".pdf\") && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-2\",\n          children: \"Voc\\xEA pode converter PDFs para os seguintes formatos de imagem: JPEG, JPG, PNG, BMP, TIFF, GIF, WEBP.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [fileType === \"image\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"jpeg\"),\n              children: \"Converter para JPEG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"png\"),\n              className: \"ml-4\",\n              children: \"Converter para PNG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), fileType === \"application\" && file.name.endsWith(\".pdf\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"jpeg\"),\n              children: \"Converter PDF para JPEG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"jpg\"),\n              className: \"ml-4\",\n              children: \"Converter PDF para JPG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"png\"),\n              className: \"ml-4\",\n              children: \"Converter PDF para PNG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"bmp\"),\n              className: \"ml-4\",\n              children: \"Converter PDF para BMP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"tiff\"),\n              className: \"ml-4\",\n              children: \"Converter PDF para TIFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"gif\"),\n              className: \"ml-4\",\n              children: \"Converter PDF para GIF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleConversion(\"webp\"),\n              className: \"ml-4\",\n              children: \"Converter PDF para WEBP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), fileType === \"application\" && file.name.endsWith(\".docx\") && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleConversion(\"pdf\"),\n            className: \"ml-4\",\n            children: \"Converter DOCX para PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), convertedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: convertedFile,\n          download: `${file.name.split(\".\").slice(0, -1).join(\".\")}.${downloadFormat}`,\n          className: \"download-link\",\n          children: \"Baixar Arquivo Convertido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: reset,\n          className: \"bg-red-500\",\n          children: \"Resetar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"almZEZqMkFDs2QsgaeDAxMtCKIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Input","Progress","ThemeProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","fileType","setFileType","convertedFile","setConvertedFile","progress","setProgress","error","setError","isProcessing","setIsProcessing","downloadFormat","setDownloadFormat","apiURL","process","env","REACT_APP_API_URL","handleFileUpload","event","_supportedFormats$typ","uploadedFile","target","files","type","split","extension","name","pop","toLowerCase","supportedFormats","image","audio","application","includes","handleConversion","format","endsWith","join","formData","FormData","append","apiEndpoint","fetch","method","body","then","response","ok","Error","status","statusText","blob","downloadUrl","window","URL","createObjectURL","catch","err","message","console","finally","reset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","value","href","download","slice","_c","$RefreshReg$"],"sources":["/home/leonardo/Documentos/SiteConvert/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"./components/ui/button\";\nimport Input from \"./components/ui/input\";\nimport Progress from \"./components/ui/progress\";\nimport { ThemeProvider } from \"./context/ThemeContext\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState(\"\");\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [downloadFormat, setDownloadFormat] = useState(\"\");\n\n  // URL da API\n  const apiURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n\n  // Upload do arquivo\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n\n    if (!uploadedFile) {\n      setError(\"Nenhum arquivo selecionado.\");\n      setFile(null);\n      return;\n    }\n\n    const type = uploadedFile.type.split(\"/\")[0];\n    const extension = uploadedFile.name.split(\".\").pop().toLowerCase();\n\n    const supportedFormats = {\n      image: [\"jpeg\", \"jpg\", \"png\", \"svg\", \"bmp\", \"tiff\", \"ico\", \"webp\", \"gif\"],\n      audio: [\"mp3\", \"wav\", \"ogg\", \"flac\", \"m4a\"],\n      application: [\"pdf\", \"docx\"],\n    };\n\n    if (!supportedFormats[type]?.includes(extension)) {\n      setError(`Formato de arquivo .${extension} não é suportado.`);\n      setFile(null);\n      return;\n    }\n\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError(\"\");\n  };\n\n  // Conversão do arquivo\n  const handleConversion = (format) => {\n    if (!file) {\n      setError(\"Por favor, envie um arquivo primeiro.\");\n      return;\n    }\n\n    if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      const supportedFormats = [\n        \"jpeg\",\n        \"jpg\",\n        \"png\",\n        \"bmp\",\n        \"tiff\",\n        \"gif\",\n        \"webp\",\n      ];\n      if (!supportedFormats.includes(format)) {\n        setError(\n          `Formato de saída '${format}' não é suportado para conversão de PDF. Escolha entre: ${supportedFormats.join(\n            \", \"\n          )}.`\n        );\n        return;\n      }\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n    setDownloadFormat(format);\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"format\", format);\n\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === \"audio\") {\n      apiEndpoint = `${apiURL}/convert/audio`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      apiEndpoint = `${apiURL}/convert/pdf_to_images`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".docx\")) {\n      apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n    }\n\n    fetch(apiEndpoint, {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\n            `Erro do servidor: ${response.status} - ${response.statusText}`\n          );\n        }\n        return response.blob();\n      })\n      .then((blob) => {\n        const downloadUrl = window.URL.createObjectURL(blob);\n        setConvertedFile(downloadUrl);\n      })\n      .catch((err) => {\n        setError(err.message || \"Erro inesperado ao converter o arquivo\");\n        console.error(\"Erro no processamento do arquivo:\", err);\n      })\n      .finally(() => {\n        setProgress(100);\n        setIsProcessing(false);\n      });\n  };\n\n  // Resetar estado\n  const reset = () => {\n    setFile(null);\n    setFileType(\"\");\n    setConvertedFile(null);\n    setProgress(0);\n    setError(\"\");\n    setIsProcessing(false);\n    setDownloadFormat(\"\");\n  };\n\n  return (\n    <ThemeProvider>\n      <div className=\"app-container\">\n        <div className=\"header-container\">\n          <h1 className=\"text-3xl font-bold mb-4\">Conversor de Arquivos</h1>\n          {error && (\n            <p className=\"text-red-500\">\n              <strong>Erro:</strong> {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"upload-container\">\n          <Input type=\"file\" onChange={handleFileUpload} className=\"mt-4\" />\n\n          <div className=\"file-info mt-4\">\n            <p className=\"text-white\">\n              <strong>Tipos de arquivos suportados:</strong>\n            </p>\n            <ul className=\"text-white\">\n              <li>Imagens: JPEG, JPG, PNG, SVG, BMP, TIFF, ICO, WEBP, GIF</li>\n              <li>Áudio: MP3, WAV, OGG, FLAC, M4A</li>\n              <li>Documentos: PDF, DOCX</li>\n            </ul>\n          </div>\n\n          {file && fileType === \"application\" && file.name.endsWith(\".pdf\") && (\n            <p className=\"text-white mt-2\">\n              Você pode converter PDFs para os seguintes formatos de imagem:\n              JPEG, JPG, PNG, BMP, TIFF, GIF, WEBP.\n            </p>\n          )}\n\n          {file && (\n            <div className=\"mt-6\">\n              {fileType === \"image\" && (\n                <>\n                  <Button onClick={() => handleConversion(\"jpeg\")}>\n                    Converter para JPEG\n                  </Button>\n                  <Button\n                    onClick={() => handleConversion(\"png\")}\n                    className=\"ml-4\"\n                  >\n                    Converter para PNG\n                  </Button>\n                </>\n              )}\n              {fileType === \"application\" && file.name.endsWith(\".pdf\") && (\n                <>\n                  <Button onClick={() => handleConversion(\"jpeg\")}>\n                    Converter PDF para JPEG\n                  </Button>\n                  <Button\n                    onClick={() => handleConversion(\"jpg\")}\n                    className=\"ml-4\"\n                  >\n                    Converter PDF para JPG\n                  </Button>\n                  <Button\n                    onClick={() => handleConversion(\"png\")}\n                    className=\"ml-4\"\n                  >\n                    Converter PDF para PNG\n                  </Button>\n                  <Button\n                    onClick={() => handleConversion(\"bmp\")}\n                    className=\"ml-4\"\n                  >\n                    Converter PDF para BMP\n                  </Button>\n                  <Button\n                    onClick={() => handleConversion(\"tiff\")}\n                    className=\"ml-4\"\n                  >\n                    Converter PDF para TIFF\n                  </Button>\n                  <Button\n                    onClick={() => handleConversion(\"gif\")}\n                    className=\"ml-4\"\n                  >\n                    Converter PDF para GIF\n                  </Button>\n                  <Button\n                    onClick={() => handleConversion(\"webp\")}\n                    className=\"ml-4\"\n                  >\n                    Converter PDF para WEBP\n                  </Button>\n                </>\n              )}\n              {fileType === \"application\" && file.name.endsWith(\".docx\") && (\n                <Button\n                  onClick={() => handleConversion(\"pdf\")}\n                  className=\"ml-4\"\n                >\n                  Converter DOCX para PDF\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n\n        {progress > 0 && (\n          <div className=\"mt-4\">\n            <Progress value={progress} />\n          </div>\n        )}\n\n        {convertedFile && (\n          <div className=\"mt-6 text-center\">\n            <a\n              href={convertedFile}\n              download={`${file.name\n                .split(\".\")\n                .slice(0, -1)\n                .join(\".\")}.${downloadFormat}`}\n              className=\"download-link\"\n            >\n              Baixar Arquivo Convertido\n            </a>\n          </div>\n        )}\n\n        <div className=\"mt-6\">\n          <Button onClick={reset} className=\"bg-red-500\">\n            Resetar\n          </Button>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/leonardo-fragoso/Documentos/convertsite/frontend/src/components/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onFileUpload,\n  reset\n}) => {\n  _s();\n  const [fileName, setFileName] = useState('');\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileName(file.name);\n      onFileUpload(file); // Chama a função para processar o upload\n    }\n  };\n  const handleReset = () => {\n    reset(); // Chama a função de reset do componente pai\n    setFileName(''); // Limpa o nome do arquivo\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-upload\",\n      onChange: handleFileChange,\n      style: {\n        display: 'none'\n      } // Esconde o input real\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-upload\",\n      className: \"file-upload-label\",\n      children: fileName ? 'Trocar arquivo' : 'Clique aqui para selecionar um arquivo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      disabled: !fileName,\n      className: `reset-button ${!fileName ? 'disabled' : ''}`,\n      children: \"Resetar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Arquivo selecionado: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"MqCFEWop24dJ23Az3DDFG/S0d9E=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUploader","onFileUpload","reset","_s","fileName","setFileName","handleFileChange","e","file","target","files","name","handleReset","className","children","type","id","onChange","style","display","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/leonardo-fragoso/Documentos/convertsite/frontend/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FileUploader = ({ onFileUpload, reset }) => {\n  const [fileName, setFileName] = useState('');\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileName(file.name);\n      onFileUpload(file); // Chama a função para processar o upload\n    }\n  };\n\n  const handleReset = () => {\n    reset(); // Chama a função de reset do componente pai\n    setFileName(''); // Limpa o nome do arquivo\n  };\n\n  return (\n    <div className=\"file-uploader\">\n      {/* Input escondido e substituído por um label clicável */}\n      <input\n        type=\"file\"\n        id=\"file-upload\"\n        onChange={handleFileChange}\n        style={{ display: 'none' }} // Esconde o input real\n      />\n      <label htmlFor=\"file-upload\" className=\"file-upload-label\">\n        {fileName ? 'Trocar arquivo' : 'Clique aqui para selecionar um arquivo'}\n      </label>\n      \n      {/* Botão Reset */}\n      <button \n        onClick={handleReset} \n        disabled={!fileName} \n        className={`reset-button ${!fileName ? 'disabled' : ''}`}\n      >\n        Resetar\n      </button>\n      \n      {/* Exibir nome do arquivo selecionado */}\n      {fileName && <p>Arquivo selecionado: {fileName}</p>}\n    </div>\n  );\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACRH,WAAW,CAACG,IAAI,CAACG,IAAI,CAAC;MACtBV,YAAY,CAACO,IAAI,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBV,KAAK,CAAC,CAAC,CAAC,CAAC;IACTG,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5Bf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,aAAa;MAChBC,QAAQ,EAAEX,gBAAiB;MAC3BY,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE,CAAC;IAAA;MAAAf,QAAA,EAAAgB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFvB,OAAA;MAAOwB,OAAO,EAAC,aAAa;MAACV,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EACvDV,QAAQ,GAAG,gBAAgB,GAAG;IAAwC;MAAAA,QAAA,EAAAgB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eAGRvB,OAAA;MACEyB,OAAO,EAAEZ,WAAY;MACrBa,QAAQ,EAAE,CAACrB,QAAS;MACpBS,SAAS,EAAE,gBAAgB,CAACT,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;MAAAU,QAAA,EAC1D;IAED;MAAAV,QAAA,EAAAgB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRlB,QAAQ,iBAAIL,OAAA;MAAAe,QAAA,GAAG,uBAAqB,EAACV,QAAQ;IAAA;MAAAA,QAAA,EAAAgB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAlB,QAAA,EAAAgB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CIH,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
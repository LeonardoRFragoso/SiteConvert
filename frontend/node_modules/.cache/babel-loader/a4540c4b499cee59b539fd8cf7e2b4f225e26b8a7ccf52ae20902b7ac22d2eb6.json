{"ast":null,"code":"var _jsxFileName = \"/home/leonardo-fragoso/\\xC1rea de trabalho/convertsite/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar/navbar'; // Adicionando a Navbar\nimport FileUploader from './components/FileUploader';\nimport ConverterForm from './components/ConverterForm';\nimport ProgressBar from './components/ProgressBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState('');\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState('');\n  const apiURL = process.env.REACT_APP_API_URL;\n\n  // Função para lidar com o upload do arquivo\n  const handleFileUpload = uploadedFile => {\n    const type = uploadedFile.type.split('/')[0]; // Ex.: \"image/png\" -> \"image\"\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError('');\n  };\n\n  // Função para lidar com a conversão de arquivos\n  const handleConversion = format => {\n    if (!file) {\n      setError('Por favor, envie um arquivo primeiro.');\n      return;\n    }\n    setProgress(20);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('format', format);\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === 'audio') apiEndpoint = `${apiURL}/convert/audio`;else if (fileType === 'application' && file.name.endsWith('.pdf')) apiEndpoint = `${apiURL}/convert/pdf_to_images`;else if (fileType === 'application' && file.name.endsWith('.docx')) apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n    fetch(apiEndpoint, {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Erro ao processar o arquivo');\n      }\n      setProgress(70);\n      return response.blob();\n    }).then(blob => {\n      const downloadUrl = window.URL.createObjectURL(blob);\n      setConvertedFile(downloadUrl);\n      setProgress(100);\n    }).catch(err => {\n      setError(err.message || 'Erro inesperado ao converter o arquivo');\n      setProgress(0);\n    });\n  };\n\n  // Função para resetar o estado do upload/conversão\n  const reset = () => {\n    setFile(null);\n    setFileType('');\n    setConvertedFile(null);\n    setProgress(0);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conversor de Arquivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erro:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        onFileUpload: handleFileUpload,\n        reset: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), file && fileType === 'image' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(file),\n          alt: \"Pr\\xE9-visualiza\\xE7\\xE3o\",\n          className: \"image-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), file && /*#__PURE__*/_jsxDEV(ConverterForm, {\n        onSubmit: handleConversion,\n        formats: fileType === 'image' ? ['jpeg', 'png', 'gif', 'svg'] : fileType === 'audio' ? ['mp3', 'wav', 'ogg', 'flac', 'aac'] : file.name.endsWith('.pdf') ? ['png', 'jpeg', 'tiff', 'bmp'] : ['pdf']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), progress > 0 && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 26\n      }, this), convertedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: convertedFile,\n          download: \"arquivo_convertido\",\n          className: \"download-link\",\n          children: \"Baixar Arquivo Convertido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"Qc3r0F3apT9Hx/MSbqqoPBlUq30=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","FileUploader","ConverterForm","ProgressBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","fileType","setFileType","convertedFile","setConvertedFile","progress","setProgress","error","setError","apiURL","process","env","REACT_APP_API_URL","handleFileUpload","uploadedFile","type","split","handleConversion","format","formData","FormData","append","apiEndpoint","name","endsWith","fetch","method","body","then","response","ok","Error","blob","downloadUrl","window","URL","createObjectURL","catch","err","message","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onFileUpload","src","alt","onSubmit","formats","href","download","_c","$RefreshReg$"],"sources":["/home/leonardo-fragoso/Área de trabalho/convertsite/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './components/Navbar/navbar';  // Adicionando a Navbar\nimport FileUploader from './components/FileUploader';\nimport ConverterForm from './components/ConverterForm';\nimport ProgressBar from './components/ProgressBar';\nimport './App.css';\n\nconst App = () => {\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState('');\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState('');\n\n  const apiURL = process.env.REACT_APP_API_URL;\n\n  // Função para lidar com o upload do arquivo\n  const handleFileUpload = (uploadedFile) => {\n    const type = uploadedFile.type.split('/')[0]; // Ex.: \"image/png\" -> \"image\"\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError('');\n  };\n\n  // Função para lidar com a conversão de arquivos\n  const handleConversion = (format) => {\n    if (!file) {\n      setError('Por favor, envie um arquivo primeiro.');\n      return;\n    }\n\n    setProgress(20);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('format', format);\n\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === 'audio') apiEndpoint = `${apiURL}/convert/audio`;\n    else if (fileType === 'application' && file.name.endsWith('.pdf')) apiEndpoint = `${apiURL}/convert/pdf_to_images`;\n    else if (fileType === 'application' && file.name.endsWith('.docx')) apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n\n    fetch(apiEndpoint, {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Erro ao processar o arquivo');\n        }\n        setProgress(70);\n        return response.blob();\n      })\n      .then((blob) => {\n        const downloadUrl = window.URL.createObjectURL(blob);\n        setConvertedFile(downloadUrl);\n        setProgress(100);\n      })\n      .catch((err) => {\n        setError(err.message || 'Erro inesperado ao converter o arquivo');\n        setProgress(0);\n      });\n  };\n\n  // Função para resetar o estado do upload/conversão\n  const reset = () => {\n    setFile(null);\n    setFileType('');\n    setConvertedFile(null);\n    setProgress(0);\n    setError('');\n  };\n\n  return (\n    <>\n      <Navbar />  {/* Navbar foi adicionada aqui */}\n      <div className=\"app-container\">\n        <h1>Conversor de Arquivos</h1>\n        {error && (\n          <p className=\"error\">\n            <strong>Erro:</strong> {error}\n          </p>\n        )}\n        <FileUploader onFileUpload={handleFileUpload} reset={reset} />\n        \n        {/* Pré-visualização de imagem */}\n        {file && fileType === 'image' && (\n          <div>\n            <img \n              src={URL.createObjectURL(file)} \n              alt=\"Pré-visualização\" \n              className=\"image-preview\"\n            />\n          </div>\n        )}\n\n        {/* Exibição do formulário de conversão */}\n        {file && (\n          <ConverterForm\n            onSubmit={handleConversion}\n            formats={\n              fileType === 'image'\n                ? ['jpeg', 'png', 'gif', 'svg']\n                : fileType === 'audio'\n                ? ['mp3', 'wav', 'ogg', 'flac', 'aac']\n                : file.name.endsWith('.pdf')\n                ? ['png', 'jpeg', 'tiff', 'bmp']\n                : ['pdf']\n            }\n          />\n        )}\n\n        {/* Barra de progresso */}\n        {progress > 0 && <ProgressBar progress={progress} />}\n        \n        {/* Link para baixar o arquivo convertido */}\n        {convertedFile && (\n          <div>\n            <a href={convertedFile} download=\"arquivo_convertido\" className=\"download-link\">\n              Baixar Arquivo Convertido\n            </a>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,4BAA4B,CAAC,CAAE;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMqB,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;EAE5C;EACA,MAAMC,gBAAgB,GAAIC,YAAY,IAAK;IACzC,MAAMC,IAAI,GAAGD,YAAY,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9Cd,WAAW,CAACa,IAAI,CAAC;IACjBf,OAAO,CAACc,YAAY,CAAC;IACrBV,gBAAgB,CAAC,IAAI,CAAC;IACtBI,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAED;EACA,MAAMS,gBAAgB,GAAIC,MAAM,IAAK;IACnC,IAAI,CAACnB,IAAI,EAAE;MACTS,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACF;IAEAF,WAAW,CAAC,EAAE,CAAC;IACf,MAAMa,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtB,IAAI,CAAC;IAC7BoB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC;IAEjC,IAAII,WAAW,GAAG,GAAGb,MAAM,gBAAgB;IAC3C,IAAIR,QAAQ,KAAK,OAAO,EAAEqB,WAAW,GAAG,GAAGb,MAAM,gBAAgB,CAAC,KAC7D,IAAIR,QAAQ,KAAK,aAAa,IAAIF,IAAI,CAACwB,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAEF,WAAW,GAAG,GAAGb,MAAM,wBAAwB,CAAC,KAC9G,IAAIR,QAAQ,KAAK,aAAa,IAAIF,IAAI,CAACwB,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAEF,WAAW,GAAG,GAAGb,MAAM,sBAAsB;IAEjHgB,KAAK,CAACH,WAAW,EAAE;MACjBI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACR,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACAzB,WAAW,CAAC,EAAE,CAAC;MACf,OAAOuB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEI,IAAI,IAAK;MACd,MAAMC,WAAW,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACpD5B,gBAAgB,CAAC6B,WAAW,CAAC;MAC7B3B,WAAW,CAAC,GAAG,CAAC;IAClB,CAAC,CAAC,CACD+B,KAAK,CAAEC,GAAG,IAAK;MACd9B,QAAQ,CAAC8B,GAAG,CAACC,OAAO,IAAI,wCAAwC,CAAC;MACjEjC,WAAW,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMkC,KAAK,GAAGA,CAAA,KAAM;IAClBxC,OAAO,CAAC,IAAI,CAAC;IACbE,WAAW,CAAC,EAAE,CAAC;IACfE,gBAAgB,CAAC,IAAI,CAAC;IACtBE,WAAW,CAAC,CAAC,CAAC;IACdE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAA6C,QAAA,gBACE/C,OAAA,CAACL,MAAM;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE,eACZnD,OAAA;MAAKoD,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC5B/C,OAAA;QAAA+C,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BtC,KAAK,iBACJb,OAAA;QAAGoD,SAAS,EAAC,OAAO;QAAAL,QAAA,gBAClB/C,OAAA;UAAA+C,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACtC,KAAK;MAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CACJ,eACDnD,OAAA,CAACJ,YAAY;QAACyD,YAAY,EAAElC,gBAAiB;QAAC2B,KAAK,EAAEA;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG7D9C,IAAI,IAAIE,QAAQ,KAAK,OAAO,iBAC3BP,OAAA;QAAA+C,QAAA,eACE/C,OAAA;UACEsD,GAAG,EAAEb,GAAG,CAACC,eAAe,CAACrC,IAAI,CAAE;UAC/BkD,GAAG,EAAC,2BAAkB;UACtBH,SAAS,EAAC;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAGA9C,IAAI,iBACHL,OAAA,CAACH,aAAa;QACZ2D,QAAQ,EAAEjC,gBAAiB;QAC3BkC,OAAO,EACLlD,QAAQ,KAAK,OAAO,GAChB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,GAC7BA,QAAQ,KAAK,OAAO,GACpB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,GACpCF,IAAI,CAACwB,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,GAC1B,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,GAC9B,CAAC,KAAK;MACX;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACF,EAGAxC,QAAQ,GAAG,CAAC,iBAAIX,OAAA,CAACF,WAAW;QAACa,QAAQ,EAAEA;MAAS;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGnD1C,aAAa,iBACZT,OAAA;QAAA+C,QAAA,eACE/C,OAAA;UAAG0D,IAAI,EAAEjD,aAAc;UAACkD,QAAQ,EAAC,oBAAoB;UAACP,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAC;QAEhF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC/C,EAAA,CAvHID,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AAyHT,eAAeA,GAAG;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
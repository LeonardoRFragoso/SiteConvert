{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Documentos/SiteConvert/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"./components/ui/button\";\nimport Input from \"./components/ui/input\";\nimport Progress from \"./components/ui/progress\";\nimport { ThemeProvider } from \"./context/ThemeContext\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState(\"\");\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progressMessage, setProgressMessage] = useState(\"\"); // Mensagem de progresso\n  const [downloadFormat, setDownloadFormat] = useState(\"\");\n  const apiURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n  const handleFileUpload = event => {\n    var _supportedFormats$typ;\n    const uploadedFile = event.target.files[0];\n    if (!uploadedFile) {\n      setError(\"Nenhum arquivo selecionado.\");\n      setFile(null);\n      return;\n    }\n    const type = uploadedFile.type.split(\"/\")[0];\n    const extension = uploadedFile.name.split(\".\").pop().toLowerCase();\n    const supportedFormats = {\n      image: [\"jpeg\", \"jpg\", \"png\", \"svg\", \"bmp\", \"tiff\", \"ico\", \"webp\", \"gif\"],\n      audio: [\"mp3\", \"wav\", \"ogg\", \"flac\", \"m4a\"],\n      application: [\"pdf\", \"docx\"]\n    };\n    if (!((_supportedFormats$typ = supportedFormats[type]) !== null && _supportedFormats$typ !== void 0 && _supportedFormats$typ.includes(extension))) {\n      setError(`Formato de arquivo .${extension} não é suportado.`);\n      setFile(null);\n      return;\n    }\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError(\"\");\n  };\n  const handleConversion = format => {\n    if (!file) {\n      setError(\"Por favor, envie um arquivo primeiro.\");\n      return;\n    }\n    if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      const supportedImageFormats = [\"png\", \"jpeg\", \"tiff\", \"bmp\", \"gif\", \"webp\"];\n      if (!supportedImageFormats.includes(format)) {\n        setError(`Formato '${format}' não é suportado para conversão de PDF. Formatos válidos: ${supportedImageFormats.join(\", \")}.`);\n        return;\n      }\n    }\n\n    // Inicia processamento e atualiza UI\n    setIsProcessing(true);\n    setProgress(10); // Exibe barra com progresso inicial\n    setProgressMessage(\"Iniciando a conversão...\"); // Mensagem inicial\n    setDownloadFormat(format);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"format\", format);\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === \"audio\") {\n      apiEndpoint = `${apiURL}/convert/audio`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      apiEndpoint = `${apiURL}/convert/pdf_to_images`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".docx\")) {\n      apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n    }\n\n    // Timeout para permitir atualização da UI antes do fetch\n    setTimeout(() => {\n      fetch(apiEndpoint, {\n        method: \"POST\",\n        body: formData\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`Erro do servidor: ${response.status} - ${response.statusText}`);\n        }\n        setProgressMessage(\"Quase lá... processando!\");\n        return response.blob();\n      }).then(blob => {\n        const downloadUrl = window.URL.createObjectURL(blob);\n        setConvertedFile(downloadUrl);\n        setProgressMessage(\"Conversão concluída com sucesso!\");\n      }).catch(err => {\n        setError(err.message || \"Erro inesperado ao converter o arquivo\");\n        setProgressMessage(\"\"); // Limpa a mensagem em caso de erro\n        console.error(\"Erro no processamento do arquivo:\", err);\n      }).finally(() => {\n        setProgress(100);\n        setIsProcessing(false);\n      });\n    }, 0);\n  };\n  const reset = () => {\n    setFile(null);\n    setFileType(\"\");\n    setConvertedFile(null);\n    setProgress(0);\n    setError(\"\");\n    setProgressMessage(\"\"); // Limpa mensagem de progresso\n    setIsProcessing(false);\n    setDownloadFormat(\"\");\n  };\n\n  // Limpeza de URLs criados para evitar vazamentos de memória\n  useEffect(() => {\n    return () => {\n      if (convertedFile) {\n        window.URL.revokeObjectURL(convertedFile);\n      }\n    };\n  }, [convertedFile]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-4\",\n          children: \"Conversor de Arquivos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Erro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), \" \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          onChange: handleFileUpload,\n          className: \"mt-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipos de arquivos suportados:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Imagens: JPEG, JPG, PNG, SVG, BMP, TIFF, ICO, WEBP, GIF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\xC1udio: MP3, WAV, OGG, FLAC, M4A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Documentos: PDF, DOCX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), file && fileType === \"image\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(file),\n            alt: \"Pr\\xE9-visualiza\\xE7\\xE3o\",\n            className: \"image-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white mt-2\",\n            children: \"Voc\\xEA pode converter imagens para JPEG, PNG, SVG, BMP, TIFF, ICO, WEBP ou GIF.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), file && fileType === \"audio\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-2\",\n          children: \"Voc\\xEA pode converter \\xE1udio para MP3, WAV, OGG, FLAC ou M4A.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), file && fileType === \"application\" && file.name.endsWith(\".pdf\") && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-2\",\n          children: \"Voc\\xEA pode converter PDFs para os seguintes formatos de imagem: JPEG, JPG, PNG, BMP, TIFF, GIF, WEBP.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), file && fileType === \"application\" && file.name.endsWith(\".docx\") && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-2\",\n          children: \"Voc\\xEA pode converter DOCX para PDF.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [fileType === \"image\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleConversion(\"jpeg\"),\n            disabled: isProcessing,\n            children: \"Converter para JPEG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleConversion(\"png\"),\n            className: \"ml-4\",\n            disabled: isProcessing,\n            children: \"Converter para PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleConversion(\"svg\"),\n            className: \"ml-4\",\n            disabled: isProcessing,\n            children: \"Converter para SVG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), fileType === \"audio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleConversion(\"mp3\"),\n            disabled: isProcessing,\n            children: \"Converter para MP3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleConversion(\"wav\"),\n            className: \"ml-4\",\n            disabled: isProcessing,\n            children: \"Converter para WAV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-white\",\n          children: progressMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin h-5 w-5 text-white ml-2\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8v8H4z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), convertedFile && !isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: convertedFile,\n          download: `${file.name.split(\".\").slice(0, -1).join(\".\")}.${downloadFormat}`,\n          className: \"download-link\",\n          children: \"Baixar Arquivo Convertido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: reset,\n          className: \"bg-red-500\",\n          disabled: isProcessing,\n          children: \"Resetar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qqmQJmo4graUnJmZ7s78RW7PspA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","Input","Progress","ThemeProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","fileType","setFileType","convertedFile","setConvertedFile","progress","setProgress","error","setError","isProcessing","setIsProcessing","progressMessage","setProgressMessage","downloadFormat","setDownloadFormat","apiURL","process","env","REACT_APP_API_URL","handleFileUpload","event","_supportedFormats$typ","uploadedFile","target","files","type","split","extension","name","pop","toLowerCase","supportedFormats","image","audio","application","includes","handleConversion","format","endsWith","supportedImageFormats","join","formData","FormData","append","apiEndpoint","setTimeout","fetch","method","body","then","response","ok","Error","status","statusText","blob","downloadUrl","window","URL","createObjectURL","catch","err","message","console","finally","reset","revokeObjectURL","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","src","alt","onClick","disabled","value","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","href","download","slice","_c","$RefreshReg$"],"sources":["/home/leonardo/Documentos/SiteConvert/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"./components/ui/button\";\nimport Input from \"./components/ui/input\";\nimport Progress from \"./components/ui/progress\";\nimport { ThemeProvider } from \"./context/ThemeContext\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState(\"\");\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progressMessage, setProgressMessage] = useState(\"\"); // Mensagem de progresso\n  const [downloadFormat, setDownloadFormat] = useState(\"\");\n\n  const apiURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n\n    if (!uploadedFile) {\n      setError(\"Nenhum arquivo selecionado.\");\n      setFile(null);\n      return;\n    }\n\n    const type = uploadedFile.type.split(\"/\")[0];\n    const extension = uploadedFile.name.split(\".\").pop().toLowerCase();\n\n    const supportedFormats = {\n      image: [\"jpeg\", \"jpg\", \"png\", \"svg\", \"bmp\", \"tiff\", \"ico\", \"webp\", \"gif\"],\n      audio: [\"mp3\", \"wav\", \"ogg\", \"flac\", \"m4a\"],\n      application: [\"pdf\", \"docx\"],\n    };\n\n    if (!supportedFormats[type]?.includes(extension)) {\n      setError(`Formato de arquivo .${extension} não é suportado.`);\n      setFile(null);\n      return;\n    }\n\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError(\"\");\n  };\n\n  const handleConversion = (format) => {\n    if (!file) {\n      setError(\"Por favor, envie um arquivo primeiro.\");\n      return;\n    }\n\n    if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      const supportedImageFormats = [\n        \"png\",\n        \"jpeg\",\n        \"tiff\",\n        \"bmp\",\n        \"gif\",\n        \"webp\",\n      ];\n      if (!supportedImageFormats.includes(format)) {\n        setError(\n          `Formato '${format}' não é suportado para conversão de PDF. Formatos válidos: ${supportedImageFormats.join(\n            \", \"\n          )}.`\n        );\n        return;\n      }\n    }\n\n    // Inicia processamento e atualiza UI\n    setIsProcessing(true);\n    setProgress(10); // Exibe barra com progresso inicial\n    setProgressMessage(\"Iniciando a conversão...\"); // Mensagem inicial\n    setDownloadFormat(format);\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"format\", format);\n\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === \"audio\") {\n      apiEndpoint = `${apiURL}/convert/audio`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".pdf\")) {\n      apiEndpoint = `${apiURL}/convert/pdf_to_images`;\n    } else if (fileType === \"application\" && file.name.endsWith(\".docx\")) {\n      apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n    }\n\n    // Timeout para permitir atualização da UI antes do fetch\n    setTimeout(() => {\n      fetch(apiEndpoint, {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\n              `Erro do servidor: ${response.status} - ${response.statusText}`\n            );\n          }\n          setProgressMessage(\"Quase lá... processando!\");\n          return response.blob();\n        })\n        .then((blob) => {\n          const downloadUrl = window.URL.createObjectURL(blob);\n          setConvertedFile(downloadUrl);\n          setProgressMessage(\"Conversão concluída com sucesso!\");\n        })\n        .catch((err) => {\n          setError(err.message || \"Erro inesperado ao converter o arquivo\");\n          setProgressMessage(\"\"); // Limpa a mensagem em caso de erro\n          console.error(\"Erro no processamento do arquivo:\", err);\n        })\n        .finally(() => {\n          setProgress(100);\n          setIsProcessing(false);\n        });\n    }, 0);\n  };\n\n  const reset = () => {\n    setFile(null);\n    setFileType(\"\");\n    setConvertedFile(null);\n    setProgress(0);\n    setError(\"\");\n    setProgressMessage(\"\"); // Limpa mensagem de progresso\n    setIsProcessing(false);\n    setDownloadFormat(\"\");\n  };\n\n  // Limpeza de URLs criados para evitar vazamentos de memória\n  useEffect(() => {\n    return () => {\n      if (convertedFile) {\n        window.URL.revokeObjectURL(convertedFile);\n      }\n    };\n  }, [convertedFile]);\n\n  return (\n    <ThemeProvider>\n      <div className=\"app-container\">\n        <div className=\"header-container\">\n          <h1 className=\"text-3xl font-bold mb-4\">Conversor de Arquivos</h1>\n          {error && (\n            <p className=\"text-red-500\">\n              <strong>Erro:</strong> {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"upload-container\">\n          <Input type=\"file\" onChange={handleFileUpload} className=\"mt-4\" />\n\n          <div className=\"file-info mt-4\">\n            <p className=\"text-white\">\n              <strong>Tipos de arquivos suportados:</strong>\n            </p>\n            <ul className=\"text-white\">\n              <li>Imagens: JPEG, JPG, PNG, SVG, BMP, TIFF, ICO, WEBP, GIF</li>\n              <li>Áudio: MP3, WAV, OGG, FLAC, M4A</li>\n              <li>Documentos: PDF, DOCX</li>\n            </ul>\n          </div>\n\n          {file && fileType === \"image\" && (\n            <div className=\"mt-4\">\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"Pré-visualização\"\n                className=\"image-preview\"\n              />\n              <p className=\"text-white mt-2\">\n                Você pode converter imagens para JPEG, PNG, SVG, BMP, TIFF, ICO,\n                WEBP ou GIF.\n              </p>\n            </div>\n          )}\n\n          {file && fileType === \"audio\" && (\n            <p className=\"text-white mt-2\">\n              Você pode converter áudio para MP3, WAV, OGG, FLAC ou M4A.\n            </p>\n          )}\n\n          {file && fileType === \"application\" && file.name.endsWith(\".pdf\") && (\n            <p className=\"text-white mt-2\">\n              Você pode converter PDFs para os seguintes formatos de imagem:\n              JPEG, JPG, PNG, BMP, TIFF, GIF, WEBP.\n            </p>\n          )}\n\n          {file &&\n            fileType === \"application\" &&\n            file.name.endsWith(\".docx\") && (\n              <p className=\"text-white mt-2\">\n                Você pode converter DOCX para PDF.\n              </p>\n            )}\n        </div>\n\n        {file && (\n          <div className=\"mt-6\">\n            {fileType === \"image\" && (\n              <>\n                <Button\n                  onClick={() => handleConversion(\"jpeg\")}\n                  disabled={isProcessing}\n                >\n                  Converter para JPEG\n                </Button>\n                <Button\n                  onClick={() => handleConversion(\"png\")}\n                  className=\"ml-4\"\n                  disabled={isProcessing}\n                >\n                  Converter para PNG\n                </Button>\n                <Button\n                  onClick={() => handleConversion(\"svg\")}\n                  className=\"ml-4\"\n                  disabled={isProcessing}\n                >\n                  Converter para SVG\n                </Button>\n              </>\n            )}\n\n            {fileType === \"audio\" && (\n              <>\n                <Button\n                  onClick={() => handleConversion(\"mp3\")}\n                  disabled={isProcessing}\n                >\n                  Converter para MP3\n                </Button>\n                <Button\n                  onClick={() => handleConversion(\"wav\")}\n                  className=\"ml-4\"\n                  disabled={isProcessing}\n                >\n                  Converter para WAV\n                </Button>\n              </>\n            )}\n          </div>\n        )}\n\n        {isProcessing && (\n          <div className=\"mt-4 flex items-center\">\n            <Progress value={progress} />\n            <span className=\"ml-2 text-white\">{progressMessage}</span>\n            {/* Spinner opcional */}\n            <svg\n              className=\"animate-spin h-5 w-5 text-white ml-2\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle\n                className=\"opacity-25\"\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"4\"\n              ></circle>\n              <path\n                className=\"opacity-75\"\n                fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8v8H4z\"\n              ></path>\n            </svg>\n          </div>\n        )}\n\n        {convertedFile && !isProcessing && (\n          <div className=\"mt-6 text-center\">\n            <a\n              href={convertedFile}\n              download={`${file.name\n                .split(\".\")\n                .slice(0, -1)\n                .join(\".\")}.${downloadFormat}`}\n              className=\"download-link\"\n            >\n              Baixar Arquivo Convertido\n            </a>\n          </div>\n        )}\n\n        <div className=\"mt-6\">\n          <Button\n            onClick={reset}\n            className=\"bg-red-500\"\n            disabled={isProcessing}\n          >\n            Resetar\n          </Button>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
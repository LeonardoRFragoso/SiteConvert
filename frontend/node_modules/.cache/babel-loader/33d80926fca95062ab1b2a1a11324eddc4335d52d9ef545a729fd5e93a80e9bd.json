{"ast":null,"code":"var _jsxFileName = \"/home/leonardo-fragoso/Documentos/convertsite/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar/navbar';\nimport Footer from './components/Footer/footer';\nimport FileUploader from './components/FileUploader';\nimport ConverterForm from './components/ConverterForm';\nimport ProgressBar from './components/ProgressBar';\nimport { ThemeProvider, useTheme } from './context/ThemeContext'; // Contexto de Tema\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState('');\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false); // Para desabilitar o botão durante o processamento\n  const {\n    isDarkMode\n  } = useTheme(); // Usando o tema global\n  const apiURL = process.env.REACT_APP_API_URL;\n\n  // Função para lidar com o upload do arquivo\n  const handleFileUpload = uploadedFile => {\n    const type = uploadedFile.type.split('/')[0]; // Ex.: \"image/png\" -> \"image\"\n\n    // Verificação de tipo de arquivo\n    if (!['image', 'audio', 'application'].includes(type)) {\n      setError('Tipo de arquivo não suportado. Por favor, envie uma imagem, áudio ou documento.');\n      setFile(null);\n      return;\n    }\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError('');\n  };\n\n  // Função para lidar com a conversão de arquivos\n  const handleConversion = format => {\n    if (!file) {\n      setError('Por favor, envie um arquivo primeiro.');\n      return;\n    }\n    setIsProcessing(true); // Inicia o processo\n    setProgress(20);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('format', format);\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === 'audio') apiEndpoint = `${apiURL}/convert/audio`;else if (fileType === 'application' && file.name.endsWith('.pdf')) apiEndpoint = `${apiURL}/convert/pdf_to_images`;else if (fileType === 'application' && file.name.endsWith('.docx')) apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n    fetch(apiEndpoint, {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Erro ao processar o arquivo');\n      }\n      setProgress(70);\n      return response.blob();\n    }).then(blob => {\n      const downloadUrl = window.URL.createObjectURL(blob);\n      setConvertedFile(downloadUrl);\n      setProgress(100);\n      setIsProcessing(false); // Finaliza o processo\n    }).catch(err => {\n      setError(err.message || 'Erro inesperado ao converter o arquivo');\n      setProgress(0);\n      setIsProcessing(false); // Finaliza o processo\n    });\n  };\n\n  // Função para resetar o estado do upload/conversão\n  const reset = () => {\n    setFile(null);\n    setFileType('');\n    setConvertedFile(null);\n    setProgress(0);\n    setError('');\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app-container ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conversor de Arquivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erro:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        onFileUpload: handleFileUpload,\n        reset: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), file && fileType === 'image' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(file),\n          alt: \"Pr\\xE9-visualiza\\xE7\\xE3o\",\n          className: \"image-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), file && /*#__PURE__*/_jsxDEV(ConverterForm, {\n        onSubmit: handleConversion,\n        formats: fileType === 'image' ? ['jpeg', 'png', 'gif', 'svg'] : fileType === 'audio' ? ['mp3', 'wav', 'ogg', 'flac', 'aac'] : file.name.endsWith('.pdf') ? ['png', 'jpeg', 'tiff', 'bmp'] : ['pdf'],\n        isProcessing: isProcessing // Passando o estado de processamento para desabilitar o botão\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), progress > 0 && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 26\n      }, this), convertedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: convertedFile,\n          download: \"arquivo_convertido\",\n          className: \"download-link\",\n          children: \"Baixar Arquivo Convertido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"M9rX7MVyxdHwVMjjd0rOuSMXYwk=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Footer","FileUploader","ConverterForm","ProgressBar","ThemeProvider","useTheme","jsxDEV","_jsxDEV","App","_s","file","setFile","fileType","setFileType","convertedFile","setConvertedFile","progress","setProgress","error","setError","isProcessing","setIsProcessing","isDarkMode","apiURL","process","env","REACT_APP_API_URL","handleFileUpload","uploadedFile","type","split","includes","handleConversion","format","formData","FormData","append","apiEndpoint","name","endsWith","fetch","method","body","then","response","ok","Error","blob","downloadUrl","window","URL","createObjectURL","catch","err","message","reset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","src","alt","onSubmit","formats","href","download","_c","$RefreshReg$"],"sources":["/home/leonardo-fragoso/Documentos/convertsite/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './components/Navbar/navbar';\nimport Footer from './components/Footer/footer';\n\nimport FileUploader from './components/FileUploader';\nimport ConverterForm from './components/ConverterForm';\nimport ProgressBar from './components/ProgressBar';\nimport { ThemeProvider, useTheme } from './context/ThemeContext'; // Contexto de Tema\nimport './App.css';\n\nconst App = () => {\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState('');\n  const [convertedFile, setConvertedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);  // Para desabilitar o botão durante o processamento\n  const { isDarkMode } = useTheme(); // Usando o tema global\n  const apiURL = process.env.REACT_APP_API_URL;\n\n  // Função para lidar com o upload do arquivo\n  const handleFileUpload = (uploadedFile) => {\n    const type = uploadedFile.type.split('/')[0]; // Ex.: \"image/png\" -> \"image\"\n    \n    // Verificação de tipo de arquivo\n    if (!['image', 'audio', 'application'].includes(type)) {\n      setError('Tipo de arquivo não suportado. Por favor, envie uma imagem, áudio ou documento.');\n      setFile(null);\n      return;\n    }\n\n    setFileType(type);\n    setFile(uploadedFile);\n    setConvertedFile(null);\n    setError('');\n  };\n\n  // Função para lidar com a conversão de arquivos\n  const handleConversion = (format) => {\n    if (!file) {\n      setError('Por favor, envie um arquivo primeiro.');\n      return;\n    }\n\n    setIsProcessing(true); // Inicia o processo\n    setProgress(20);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('format', format);\n\n    let apiEndpoint = `${apiURL}/convert/image`;\n    if (fileType === 'audio') apiEndpoint = `${apiURL}/convert/audio`;\n    else if (fileType === 'application' && file.name.endsWith('.pdf')) apiEndpoint = `${apiURL}/convert/pdf_to_images`;\n    else if (fileType === 'application' && file.name.endsWith('.docx')) apiEndpoint = `${apiURL}/convert/docx_to_pdf`;\n\n    fetch(apiEndpoint, {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Erro ao processar o arquivo');\n        }\n        setProgress(70);\n        return response.blob();\n      })\n      .then((blob) => {\n        const downloadUrl = window.URL.createObjectURL(blob);\n        setConvertedFile(downloadUrl);\n        setProgress(100);\n        setIsProcessing(false); // Finaliza o processo\n      })\n      .catch((err) => {\n        setError(err.message || 'Erro inesperado ao converter o arquivo');\n        setProgress(0);\n        setIsProcessing(false); // Finaliza o processo\n      });\n  };\n\n  // Função para resetar o estado do upload/conversão\n  const reset = () => {\n    setFile(null);\n    setFileType('');\n    setConvertedFile(null);\n    setProgress(0);\n    setError('');\n    setIsProcessing(false);\n  };\n\n  return (\n    <ThemeProvider> {/* Provedor de tema para alternar entre dark e light mode */}\n      <div className={`app-container ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n        <Navbar />  {/* Navbar foi adicionada */}\n        \n        <h1>Conversor de Arquivos</h1>\n        \n        {/* Mensagem de erro, caso exista */}\n        {error && (\n          <p className=\"error\">\n            <strong>Erro:</strong> {error}\n          </p>\n        )}\n\n        {/* Componente de upload de arquivos */}\n        <FileUploader onFileUpload={handleFileUpload} reset={reset} />\n        \n        {/* Pré-visualização de imagem */}\n        {file && fileType === 'image' && (\n          <div>\n            <img \n              src={URL.createObjectURL(file)} \n              alt=\"Pré-visualização\" \n              className=\"image-preview\"\n            />\n          </div>\n        )}\n\n        {/* Exibição do formulário de conversão */}\n        {file && (\n          <ConverterForm\n            onSubmit={handleConversion}\n            formats={\n              fileType === 'image'\n                ? ['jpeg', 'png', 'gif', 'svg']\n                : fileType === 'audio'\n                ? ['mp3', 'wav', 'ogg', 'flac', 'aac']\n                : file.name.endsWith('.pdf')\n                ? ['png', 'jpeg', 'tiff', 'bmp']\n                : ['pdf']\n            }\n            isProcessing={isProcessing}  // Passando o estado de processamento para desabilitar o botão\n          />\n        )}\n\n        {/* Barra de progresso com animação */}\n        {progress > 0 && <ProgressBar progress={progress} />}\n        \n        {/* Link para baixar o arquivo convertido */}\n        {convertedFile && (\n          <div>\n            <a href={convertedFile} download=\"arquivo_convertido\" className=\"download-link\">\n              Baixar Arquivo Convertido\n            </a>\n          </div>\n        )}\n\n        <Footer />  {/* Footer foi adicionado */}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}